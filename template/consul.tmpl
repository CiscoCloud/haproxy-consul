global
    debug
    maxconn {{ or (env "HAPROXY_MAXCONN") 20000 }}
    # Recommended SSL ciphers as per https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    ssl-default-bind-options no-sslv3
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS

    ssl-default-server-options no-sslv3
    ssl-default-server-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    tune.ssl.default-dh-param 2048

defaults
    mode http
    maxconn {{ or (env "HAPROXY_MAXCONN") 20000 }}
    timeout connect 10000
    timeout client 300000
    timeout server 300000
    option forwardfor
    option http-server-close

###### Frontend definitions ######

frontend www
    bind *:80
    {{ if (not (env "HAPROXY_NOSSL")) }}bind *:443 ssl crt /certs/{{ end }}
    reqadd X-Forwarded-Proto:\ http if !{ ssl_fc }
    reqadd X-Forwarded-Proto:\ https if { ssl_fc }
{{with $haName := (env "HAPROXY_NAME")}}
## Tagged services, tag is used for domain information
{{ range services }}{{ if in .Tags $haName }}
## Frontend definition for domain {{ .Name }}
{{range $service := service .Name}}{{ range $tag := .Tags }}{{$pair := $tag | split "="}}{{$value := index $pair 1}}{{$config := $value | split "|"}}{{ $domain := index $config 0 }}{{if (eq (index $pair 0) "http")}}
    acl host_{{ $service.Name }}_http hdr_beg(host) -i {{ $domain }}
    use_backend {{ $service.Name }}_http_backend if host_{{$service.Name}}_http{{end}}{{if (eq (index $pair 0) "https")}}
    acl host_{{ $service.Name }}_https hdr_beg(host) -i {{ $domain }}
    use_backend {{ $service.Name }}_https_backend if host_{{$service.Name}}_https{{end}}{{if (gt (len $config) 1)}}{{ $ssl := index $config 1}}{{if (eq $ssl "forcessl") }}
    redirect scheme https if !{ ssl_fc } host_{{ $service.Name }}_http{{end}}
    {{end}}{{end}}
{{end}}
{{end}}{{end}}
{{ if env "HAPROXY_STATS" }}
## Frontend definition for Statistics
frontend stats
    bind *:1936
    mode http
    use_backend stats
{{ end }}

###### Backend definitions ######
# Backend definitions for tagged services
{{range services}}{{ if in .Tags $haName}}
## Backend for service {{.Name}}
backend {{.Name}}_http_backend
    {{range $service := service .Name}} {{if in .Tags $haName}} {{range $tag := .Tags}} {{ $pair := $tag | split "=" }} {{if (eq (index $pair 0) "http")}}
    server {{ $service.Node }} {{ $service.Address }}:{{ $service.Port }} check{{ end }}{{ end }}{{ end }}{{ end }}
backend {{ .Name }}_https_backend
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    {{range $service := service .Name}} {{if in .Tags $haName}} {{range $tag := .Tags}} {{ $pair := $tag | split "=" }} {{if (eq (index $pair 0) "https")}}
    server {{ $service.Node }} {{ $service.Address }}:{{ $service.Port }} check ssl verify none{{ end }}{{ end }}{{ end }}{{ end }}
backend {{ .Name }}_tcp_backend
    # To be continuedâ€¦
{{end}}{{end}}

{{ end }}
{{ if env "HAPROXY_STATS" }}
## Backend definition for Statistics
backend stats
    stats enable
    stats hide-version
    stats show-node
    {{ if env "HAPROXY_STATS_REFRESH" }}
        stats refresh {{ or (env "HAPROXY_STATS_REFRESH") "5s" }}
    {{ end }}
    stats scope .
    stats scope www
    {{ range services }}
    {{ range service .Name }}
       stats scope {{ .Name }}_backend
    {{ end }}
    {{ end }}
    stats realm {{ or (env "HAPROXY_STATS_TITLE") "Haproxy Statistics" }}
    stats uri {{ or (env "HAPROXY_STATS_URI") "/" }}
{{ end }}
