global
    debug
    maxconn 4000
{{ if env "HAPROXY_USESSL" }}
    # Recommended SSL ciphers as per https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    ssl-default-bind-options no-sslv3
    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS

    ssl-default-server-options no-sslv3
    ssl-default-server-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    tune.ssl.default-dh-param 2048
{{ end }}

defaults
    mode http
    timeout connect 10000 # default 10 second time out if a backend is not found
    timeout client 300000 # 5 min timeout for client
    timeout server 300000 # 5 min timeout for server
    option forwardfor
    option http-server-close

###### Frontend definitions ######

frontend www
    bind *:80
{{ if env "HAPROXY_USESSL" }}    bind *:443 ssl crt /certs/{{ end }}
    reqadd X-Forwarded-Proto:\ http if !{ ssl_fc }
    reqadd X-Forwarded-Proto:\ https if { ssl_fc }
    {{ if eq (env "HAPROXY_USESSL") "force" }}
    # Redirect all non-secure connections to HTTPS
    redirect scheme https if !{ ssl_fc }{{ end }}

## Tagged services, tag is used for domain information
{{ range $tag, $services := services | byTag }}
## Frontend definition for domain {{ $tag |replaceAll "_" "." }}:
{{ range $services}}
    acl host_{{ .Name }}_{{ $tag}} hdr_beg(host) -i {{ .Name }}.{{ or (env "HAPROXY_DOMAIN") "haproxy.service.consul" }}
    use_backend {{ .Name }}_{{$tag}}_backend if host_{{ .Name }}_{{ $tag }}
{{ end }}
{{ end }}

## Not tagged services, the url starting part is used
{{range services}}{{if eq (.Tags |len) 0 }}
    acl host_{{ .Name }} hdr(host) -m beg {{ .Name }}.
    use_backend {{ .Name }}_backend if host_{{ .Name }}
{{ end }}{{ end }}

## Frontend definition for Statistics
{{ if env "HAPROXY_STATS" }}
frontend stats
    bind *:1936
    mode http
    use_backend stats
{{ end }}

###### Backend definitions ######

# Backend definitions for tagged services
{{ range $tag, $services := services | byTag }}{{range $services}}
## Backend definition for tagged service { $tag |replaceAll "_" "." }}:
backend {{ .Name }}_{{$tag}}_backend
   http-request set-header X-Forwarded-Port %[dst_port]{{ if env "HAPROXY_USESSL" }}
   http-request add-header X-Forwarded-Proto https if { ssl_fc }{{ end }}{{ range service (print $tag "." .Name) }}
   server {{ .Node }} {{ .Address }}:{{ .Port }} check{{ end }}
{{ end }}{{ end }}

# Backend definitions for untagged services
{{ range services }}{{ if eq (.Tags |len) 0 }}
backend {{ .Name }}_backend
    http-request set-header X-Forwarded-Port %[dst_port]{{ if env "HAPROXY_USESSL" }}
    http-request add-header X-Forwarded-Proto https if { ssl_fc }{{ end }}{{ range service .Name }}
    server {{ .Node }} {{ .Address }}:{{ .Port }} check{{ end }}
{{ end }}{{ end }}

## Backend definition for Statistics
{{ if env "HAPROXY_STATS" }}
backend stats
    stats enable
    stats hide-version
    stats refresh 5s
    stats scope .
    stats realm {{ or (env "HAPROXY_STATS_TITLE") "Haproxy Statistics" }}
    stats uri {{ or (env "HAPROXY_STATS_URI") "/" }}
{{ end }}
